workflow:
  module_path: pikerag.workflows
  class_name: EnhancedAoTPikeWorkflow
  args:
    max_iterations: 5
    max_dag_depth: 3
    enable_memory: true
    memory_buffer_size: 3
    memory_weight_decay: 0.8
    enable_ensemble: true
    ensemble_methods: ["direct", "decompose", "contract"]
    enable_retry: true
    max_retries: 3
    retry_delay: 1.0
    enable_parallel: true
    max_parallel_nodes: 5
    graph_search_depth: 2  # 图搜索深度

llm:
  module_path: pikerag.llm_client
  class_name: OpenAIClient
  args:
    model: "gpt-4"
    temperature: 0.0
    max_tokens: 1024

retriever:
  module_path: pikerag.knowledge_retrievers
  class_name: EnhancedPikeRetriever
  args:
    retrieve_k: 5
    retrieve_score_threshold: 0.5
    atom_retrieve_k: 3
    
    # AoT特定配置
    aot_config:
      markov_state_threshold: 0.8
      enable_dynamic_atoms: true
      enable_graph_update: true
      max_dynamic_atoms_per_node: 5
    
    # miniRAG集成配置
    minirag_config:
      enable_minirag: true
      enable_entity_extraction: true
      enable_graph_query: true
      fusion_mode: "hybrid"  # hybrid, pike_only, graph_only
      
      # 图存储配置
      graph_storage:
        storage_type: "NetworkXStorage"
        module_path: "minirag.kg.networkx_impl"
        namespace: "pikerag"
        global_config:
          embedding_batch_num: 10
          entity_extract_max_gleaning: 2
    
    # 向量存储配置
    vector_store:
      collection_name: enhanced_pike_retriever
      persist_directory: ./data/vector_store
      
      id_document_loading:
        module_path: pikerag.utils.loaders
        func_name: load_documents
        args: {}
        
      id_atom_loading:
        module_path: pikerag.utils.loaders
        func_name: load_atoms
        args:
          atom_tag: default
          
      embedding_setting:
        module_path: langchain.embeddings
        class_name: HuggingFaceEmbeddings
        args:
          model_name: all-MiniLM-L6-v2

# 协议配置
dag_decompose_protocol:
  module_path: pikerag.prompts
  protocol_name: DAGDecomposeProtocol
  template_partial: {}

answerability_check_protocol:
  module_path: pikerag.prompts
  protocol_name: AnswerabilityCheckProtocol
  template_partial: {}

state_contract_protocol:
  module_path: pikerag.prompts
  protocol_name: StateContractProtocol
  template_partial: {}

answer_generation_protocol:
  module_path: pikerag.prompts
  protocol_name: AnswerGenerationProtocol
  template_partial: {}

ensemble_protocol:
  module_path: pikerag.prompts
  protocol_name: EnsembleProtocol
  template_partial: {}

dynamic_atom_generation_protocol:
  module_path: pikerag.prompts
  protocol_name: DynamicAtomGenerationProtocol
  template_partial: {} 